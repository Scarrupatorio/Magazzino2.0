require("dotenv").config();var createError=require("http-errors"),express=require("express"),path=require("path"),cookieParser=require("cookie-parser"),logger=require("morgan"),passport=require("passport"),sessions=require("express-session"),SessionStorage=require("connect-mongo"),mongoose=require("mongoose"),indexRouter=require("./routes/index"),warehouse=require("./routes/warehouse"),shipping=require("./routes/shipping"),orderSupplies=require("./routes/orderSupplies"),orderDetails=require("./routes/orderDetails"),profile=require("./routes/profile"),contact=require("./routes/contact"),aboutUs=require("./routes/aboutUs"),login=require("./routes/login"),account=require("./routes/account"),password=require("./routes/password"),ecommerce=require("./routes/ecommerce"),men=require("./routes/men"),women=require("./routes/women"),kids=require("./routes/kids"),sales=require("./routes/sales"),search=require("./routes/search"),app=express();const connP=mongoose.connect(process.env.MONGO_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(m=>m.connection.getClient(console.log("connected")));app.use(sessions({secret:"guestSecret",saveUninitialized:!1,resave:!1,store:SessionStorage.create({clientPromise:connP})})),app.use(passport.initialize()),app.use(passport.session()),app.set("views",path.join(__dirname,"views")),app.set("view engine","ejs"),app.use(logger("dev")),app.use(express.json()),app.use(express.urlencoded({extended:!1})),app.use(cookieParser()),app.use(express.static(path.join(__dirname,"public"))),app.use("/",indexRouter),app.use("/",warehouse),app.use("/",shipping),app.use("/",orderSupplies),app.use("/",orderDetails),app.use("/",profile),app.use("/",contact),app.use("/",aboutUs),app.use("/",login),app.use("/",account),app.use("/",password),app.use("/",ecommerce),app.use("/",men),app.use("/",women),app.use("/",kids),app.use("/",sales),app.use("/",search),app.use((function(req,res,next){next(createError(404))})),app.use((function(err,req,res,next){res.locals.message=err.message,res.locals.error="development"===req.app.get("env")?err:{},res.status(err.status||500),res.render("error")})),module.exports=app;